Now that the algorithm is completed and has undergone some testing in python,
I'd like to move it to C++ and then apply a number of heuristic optimizations.

The plan is as follows:

1) Note algorithm as it stands in python, write out the changes as they apply
to esfbayes.cpp; comments.

2) Update data structures in C++ to better reflect what I found to be easiest
in Python; specifically the encoding of genotypes as counts of alleles; the
removal of the bogus concept of a 'snp' versus 'reference' allele (which just
confuses computation).

3) Implement the algorithm as it stands.

4) Apply heuristic optimizations, specifically to speed the calculation of
different data likelihoods.  In some cases we can classify data likelihoods on
the basis of how many observed alleles are considered to be erroneous.  This
grouping will allow us to remove a large fraction of the calculations.  More
intensive optimization here may be required, and should be reviewed as the
performance of the system in C++ is better understood.

