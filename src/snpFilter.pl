#!/usr/bin/perl -w

#-------------------------------------------------------------------------------
# use
#-------------------------------------------------------------------------------
use strict;

#-------------------------------------------------------------------------------
# check command line 
#-------------------------------------------------------------------------------
die "Usage: snpFilter.pl <SNP report file> <min read depth> <max read depth> <min strand read depth> <P(SNP) cutoff> <min SNP distance> <monomorphic SNP filter: Y/N>\n" unless @ARGV == 7;

#-------------------------------------------------------------------------------
# parse command line
#-------------------------------------------------------------------------------
my $SnpFile = $ARGV[0];
my $R1Min = $ARGV[1];
my $R1Max = $ARGV[2];
my $R2Min = $ARGV[3];
my $PsnpMin = $ARGV[4];
my $DistMin = $ARGV[5];
my $MonoFilter = $ARGV[6];

#-------------------------------------------------------------------------------
# initialize stats
#-------------------------------------------------------------------------------
my $p1 = 0;
my $p2 = 0;

my $calledInDbsnp = 0;
my $inHapmap = 0;
my $inHapmapCalled = 0;
#-------------------------------------------------------------------------------
# read dbSNP file and register SNP positions
#-------------------------------------------------------------------------------
warn "Reading SNP descriptor\n";
open(SNP, $SnpFile) || die "Unable to open file: $SnpFile\n";
while (my $line = <SNP>) {
    chomp $line;
    next unless ($line =~ /^POSITION/);

    my @F = split(/\s+/, $line);
    if (@F != 49) {
	warn "incorrect number of fields";
    }

    # assign fields
    my $refName = $F[1];
    my $pos = $F[2];
    my $nBAll = $F[3];
    my $nBNondup = $F[4];
    my $nB = $F[5];
    my $nBp = $F[6];
    my $nBm = $F[7];
    my $sb = $F[32];
    my $sq = $F[33];
    my $sbPrev = $F[34];
    my $sbNext = $F[35];
    my $allele1 = $F[36];
    my $allele2 = $F[37];
    my $pSNP = $F[38];
    my $dbsnp = $F[39];
    my $hapmap = $F[40];

    #---------------------------------------------------------------------------
    #---------------------------------------------------------------------------
    # pre-filter stats
    #---------------------------------------------------------------------------
    #---------------------------------------------------------------------------
    if ($hapmap eq "Y") {
	$inHapmap++;
    }
    $p1++;

    #---------------------------------------------------------------------------
    #---------------------------------------------------------------------------
    # filters
    #---------------------------------------------------------------------------
    #---------------------------------------------------------------------------

    #---------------------------------------------------------------------------
    # Read depth
    #---------------------------------------------------------------------------

    # overall read depth max and min
    if ($nB < $R1Min || $nB > $R1Max) {
	next;
    }

    # strand specific depth min
    if ($nBp < $R2Min || $nBm < $R2Min) {
	next;
    }

    #---------------------------------------------------------------------------
    # P(SNP)
    #---------------------------------------------------------------------------
    if ($pSNP < $PsnpMin) {
	next;
    }

    #---------------------------------------------------------------------------
    # SNPs on borders of homopolymer runs
    #---------------------------------------------------------------------------
    if ($MonoFilter && (($allele1 eq $sbPrev && $allele2 eq $sbNext) || ($allele2 eq $sbPrev && $allele1 eq $sbNext))) {
	next;
    }

    # increment remaining positions
    $p2++;

    #---------------------------------------------------------------------------
    #---------------------------------------------------------------------------
    # congruence
    #---------------------------------------------------------------------------
    #---------------------------------------------------------------------------

    # called SNP in dbSNP
    if ($dbsnp eq "Y") {
	$calledInDbsnp++;
    }

    # HapMap SNP called
    if ($hapmap eq "Y") {
	$inHapmapCalled++;
    }
}

#-------------------------------------------------------------------------------
# report
#-------------------------------------------------------------------------------
warn "p1=", $p1, " p2=", $p2, " calledInDbsnp=", $calledInDbsnp, " inHapmap=", $inHapmap, " inHapmapCalled=", $inHapmapCalled, "\n";
